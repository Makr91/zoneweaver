# Zoneweaver Production Configuration
# This file is installed to /etc/zoneweaver/config.yaml

app:
  name: Zoneweaver
  version: 0.5.3
  frontend_url: https://localhost:3443

mail:
  # Configure SMTP settings for email notifications
  smtp_connect:
    host: localhost
    port: 587
    secure: false
  smtp_auth:
    user: ""
    password: ""
  smtp_settings:
    from: Zoneweaver <noreply@localhost>

server:
  hostname: localhost
  port: 3443
  ssl:
    enabled: true
    generate_ssl: true  # Only applies if existing keys do not exist
    key: /etc/zoneweaver/ssl/key.pem
    cert: /etc/zoneweaver/ssl/cert.pem

frontend:
  port: 3443
  autoRefreshInterval: 5
  enableNotifications: true
  enableDarkMode: true

cors:
  whitelist:
    - https://localhost:3443
    - https://localhost
  options:
    origin: true
    preflightContinue: true
    credentials: true

backend_servers: []

environment:
  trust_proxy: 1

logging:
  level: info
  enabled: true

limits:
  maxServersPerUser: 10

# Authentication Configuration (Phase 3: LDAP Integration)
# Uncomment and configure the sections below to enable external authentication
authentication:
  # Core authentication settings
  enabled_strategies: [local, jwt]  # Add ldap, oidc as implemented
  default_strategy: local
  
  # Authentication strategy configurations
  strategies:
    # JWT settings (consolidated from old security section)
    jwt:
      secret: "__JWT_SECRET_FROM_FILE__"
      expiration: "24h"
      issuer: "zoneweaver"
      audience: "zoneweaver-api"
#       
    # Local authentication (existing username/password)
    local:
      enabled: true
      require_email_verification: false
      password_policy:
        min_length: 8
        require_uppercase: false
        require_lowercase: false
        require_numbers: false
        require_symbols: false
      bcrypt_rounds: 10
      session_timeout: 24
      allow_new_organizations: true
        
    # LDAP Configuration
    ldap:
      enabled: false
      url: "ldap://localhost:389"
      # url: "ldaps://ldap.company.com:636"  # For secure LDAP
      bind_dn: "cn=admin,dc=example,dc=com"
      bind_credentials: "admin_password"
      search_base: "ou=users,dc=example,dc=com"
      search_filter: "(uid={{username}})"
      search_attributes: ["displayName", "mail", "memberOf"]
      tls_options:
        reject_unauthorized: false
        ca: []
        
    # OIDC Configuration (Future Phase 4)
    # oidc:
    #   enabled: false
    #   issuer: "https://accounts.google.com"
    #   client_id: ""
    #   client_secret: ""
    #   discovery_url: "https://accounts.google.com/.well-known/openid_configuration"
    #   scope: "openid profile email"
    #   response_type: "code"
  
  # Settings that control external authentication providers (LDAP/OIDC)
  # These settings do NOT apply to local/JWT authentication
  external_provider_settings:
    # Domain-to-Organization Mapping
    domain_organization_mapping:
      enabled: false
      mappings: {}
      # Example mappings (admin configurable via UI):
      # A1B2C3:
      #   - "company1.com"
      #   - "companyx.com"
      # A55555:
      #   - "companyR.net"
      # FFFFFF:
      #   - "companyZ.com"
      #   - "company3.org"
      
    # External User Provisioning (how to handle new external users)
    dynamic_provisioning:
      enabled: false
      policy: "invite_only"  # invite_only | auto_provision | manual_approval | disabled
      default_role: "user"
      fallback_action: "require_invite"  # require_invite | create_org | deny_access
      
      # Cross-domain invitation handling
      cross_domain_invites:
        allowed: true
        priority: "invitation_wins"  # invitation_wins | domain_wins
        
      # Auto-organization creation settings
      auto_org_creation:
        enabled: false
        naming_pattern: "{{domain}} Organization"
        default_description: "Auto-created organization"
        
    # Profile synchronization from external providers
    profile_sync:
      enabled: true
      update_on_login: true
      sync_fields: ["displayName", "email", "groups"]

# Database configuration with UI metadata
database:
  dialect:
    type: select
    value: sqlite
    options: ["sqlite", "mysql", "postgresql", "mariadb"]
    description: "Database type - SQLite for simple deployments, MySQL/PostgreSQL/MariaDB for production"
    required: true
  
  # Connection pooling settings (non-SQLite databases)
  pool:
    max:
      type: integer
      value: 5
      description: "Maximum number of connections in pool"
      required: false
      depends_on: dialect
      show_when: ["mysql", "postgresql", "mariadb"]
    min:
      type: integer
      value: 0
      description: "Minimum number of connections in pool"
      required: false
      depends_on: dialect
      show_when: ["mysql", "postgresql", "mariadb"]
    acquire:
      type: integer
      value: 30000
      description: "Maximum time (ms) to get connection before throwing error"
      required: false
      depends_on: dialect
      show_when: ["mysql", "postgresql", "mariadb"]
    idle:
      type: integer
      value: 10000
      description: "Maximum time (ms) a connection can be idle before being released"
      required: false
      depends_on: dialect
      show_when: ["mysql", "postgresql", "mariadb"]
  
  # SQLite specific settings
  storage:
    type: string
    value: "/var/lib/zoneweaver/database/zoneweaver.db"
    description: "SQLite database file path"
    required: false
    depends_on: dialect
    show_when: sqlite
  
  # Network database settings (MySQL, PostgreSQL, MariaDB)
  host:
    type: host
    value: localhost
    description: "Database host"
    required: false
    depends_on: dialect
    show_when: ["mysql", "postgresql", "mariadb"]
  
  port:
    type: integer
    value: 3306
    description: "Database port (3306 for MySQL/MariaDB, 5432 for PostgreSQL)"
    required: false
    depends_on: dialect
    show_when: ["mysql", "postgresql", "mariadb"]
  
  user:
    type: string
    value: zoneweaver
    description: "Database user"
    required: false
    depends_on: dialect
    show_when: ["mysql", "postgresql", "mariadb"]
  
  password:
    type: password
    value: ""
    description: "Database password"
    required: false
    depends_on: dialect
    show_when: ["mysql", "postgresql", "mariadb"]
  
  database_name:
    type: string
    value: zoneweaver
    description: "Database name"
    required: false
    depends_on: dialect
    show_when: ["mysql", "postgresql", "mariadb"]
  
  # General database settings
  logging:
    type: boolean
    value: false
    description: "Log SQL queries to console (for debugging)"
    required: true


# Legacy database path (kept for migration compatibility)
# Remove this after migration is complete
# database:
#   path: /var/lib/zoneweaver/database/zoneweaver.db

gravatar:
  # Get your API key from https://gravatar.com/
  apiKey: ""

# Rate Limiting Configuration (CodeQL Security Fix)
rateLimiting:
  authentication:
    windowMs:
      type: integer
      value: 900000
      description: "Authentication rate limit window in milliseconds (15 minutes)"
      required: true
    max:
      type: integer
      value: 25
      description: "Maximum authentication attempts per window (5X higher limit)"
      required: true
    message:
      type: string
      value: "Too many authentication attempts, please try again later"
      description: "Error message for authentication rate limit"
      required: true
  
  admin:
    windowMs:
      type: integer
      value: 900000
      description: "Admin operations rate limit window in milliseconds (15 minutes)"
      required: true
    max:
      type: integer
      value: 500
      description: "Maximum admin requests per window (5X higher limit)"
      required: true
    message:
      type: string
      value: "Too many admin requests, please try again later"
      description: "Error message for admin rate limit"
      required: true
      
  apiProxy:
    windowMs:
      type: integer
      value: 60000
      description: "API proxy rate limit window in milliseconds (1 minute)"
      required: true
    max:
      type: integer
      value: 100
      description: "Maximum API proxy requests per window (5X higher limit)"
      required: true
    message:
      type: string
      value: "Too many API proxy requests, please try again later"
      description: "Error message for API proxy rate limit"
      required: true
      
  realtime:
    windowMs:
      type: integer
      value: 60000
      description: "Real-time operations rate limit window in milliseconds (1 minute)"
      required: true
    max:
      type: integer
      value: 250
      description: "Maximum real-time requests per window (5X higher limit)"
      required: true
    message:
      type: string
      value: "Too many real-time requests, please try again later"
      description: "Error message for real-time rate limit"
      required: true
      
  standard:
    windowMs:
      type: integer
      value: 900000
      description: "Standard operations rate limit window in milliseconds (15 minutes)"
      required: true
    max:
      type: integer
      value: 1000
      description: "Maximum standard requests per window (5X higher limit)"
      required: true
    message:
      type: string
      value: "Too many requests, please try again later"
      description: "Error message for standard rate limit"
      required: true
      
  staticFiles:
    windowMs:
      type: integer
      value: 900000
      description: "Static file serving rate limit window in milliseconds (15 minutes)"
      required: true
    max:
      type: integer
      value: 5000
      description: "Maximum static file requests per window (5X higher limit for normal browsing)"
      required: true
    message:
      type: string
      value: "Too many static file requests, please try again later"
      description: "Error message for static file rate limit"
      required: true
