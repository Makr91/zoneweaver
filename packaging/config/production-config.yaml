# Zoneweaver Production Configuration
# This file is installed to /etc/zoneweaver/config.yaml
# All settings use metadata format for configuration-driven UI

app:
  name:
    type: string
    value: Zoneweaver
    description: "Application display name"
    required: true
  version:
    type: string
    value: 0.5.3
    description: "Current application version"
    required: true
  frontend_url:
    type: string
    value: https://localhost:3443
    description: "Base URL for the frontend application"
    required: true

mail:
  smtp_host:
    type: string
    value: localhost
    description: "SMTP server hostname (e.g., smtp.gmail.com)"
    required: true
  smtp_port:
    type: integer
    value: 587
    min: 1
    max: 65535
    description: "SMTP server port (587 for TLS, 465 for SSL, 25 for plain)"
    required: true
  smtp_secure:
    type: boolean
    value: false
    description: "Use SSL/TLS encryption (true for port 465, false for 587)"
    required: true
  smtp_user:
    type: string
    value: ""
    description: "SMTP authentication username (usually your email address)"
    required: false
  smtp_password:
    type: password
    value: ""
    description: "SMTP authentication password (use app passwords for Gmail)"
    required: false
  smtp_from:
    type: string
    value: "Zoneweaver <noreply@localhost>"
    description: "From address for outgoing emails"
    required: true

server:
  hostname:
    type: host
    value: localhost
    description: "Server hostname or IP address"
    required: true
  port:
    type: integer
    value: 3443
    min: 1
    max: 65535
    description: "Server port number"
    required: true
  ssl_enabled:
    type: boolean
    value: true
    description: "Enable SSL/HTTPS for the server"
    required: true
  ssl_generate:
    type: boolean
    value: true
    description: "Auto-generate SSL certificates if they don't exist"
    required: false
    depends_on: ssl_enabled
    show_when: [true]
  ssl_key_path:
    type: string
    value: "/etc/zoneweaver/ssl/key.pem"
    description: "Path to SSL private key file"
    required: false
    depends_on: ssl_enabled
    show_when: [true]
  ssl_cert_path:
    type: string
    value: "/etc/zoneweaver/ssl/cert.pem"
    description: "Path to SSL certificate file"
    required: false
    depends_on: ssl_enabled
    show_when: [true]

frontend:
  port:
    type: integer
    value: 3443
    min: 1
    max: 65535
    description: "Frontend serving port"
    required: true
  auto_refresh_interval:
    type: integer
    value: 5
    min: 1
    max: 300
    description: "Dashboard auto-refresh interval in seconds"
    required: true
  enable_notifications:
    type: boolean
    value: true
    description: "Enable browser notifications for alerts"
    required: true
  enable_dark_mode:
    type: boolean
    value: true
    description: "Enable dark mode theme by default"
    required: true

cors:
  whitelist:
    type: array
    value: 
      - "https://localhost:3443"
      - "https://localhost"
    description: "List of allowed CORS origins (one per line)"
    required: true
  allow_origin:
    type: select
    value: true
    options: [true, false, "specific"]
    description: "CORS origin policy"
    required: true
  preflight_continue:
    type: boolean
    value: true
    description: "Pass CORS preflight response to next handler"
    required: true
  credentials:
    type: boolean
    value: true
    description: "Allow credentials in CORS requests"
    required: true

backend_servers:
  type: array
  value: []
  description: "List of backend Zoneweaver API servers"
  required: false

environment:
  trust_proxy:
    type: integer
    value: 1
    min: 0
    max: 10
    description: "Number of proxy servers to trust (0 = none, 1+ = trust N proxies)"
    required: true

logging:
  level:
    type: select
    value: info
    options: ["error", "warn", "info", "debug"]
    description: "Minimum logging level"
    required: true
  enabled:
    type: boolean
    value: true
    description: "Enable application logging"
    required: true

limits:
  max_servers_per_user:
    type: integer
    value: 10
    min: 1
    max: 1000
    description: "Maximum number of servers a user can manage"
    required: true

# Authentication Configuration (Phase 3: LDAP Integration)
authentication:
  enabled_strategies:
    type: array
    value: ["local", "jwt"]
    description: "List of enabled authentication strategies"
    required: true
    
  default_strategy:
    type: select
    value: local
    options: ["local", "jwt", "ldap", "oidc"]
    description: "Default authentication strategy"
    required: true
  
  # JWT Strategy Settings
  jwt_secret:
    type: password
    value: "__JWT_SECRET_FROM_FILE__"
    description: "JWT signing secret (use strong random string)"
    required: true
    
  jwt_expiration:
    type: string
    value: "24h"
    description: "JWT token expiration time (e.g., '24h', '7d', '1h')"
    required: true
    
  jwt_issuer:
    type: string
    value: "zoneweaver"
    description: "JWT token issuer identifier"
    required: true
    
  jwt_audience:
    type: string
    value: "zoneweaver-api"
    description: "JWT token audience identifier"
    required: true
  
  # Local Authentication Settings
  local_enabled:
    type: boolean
    value: true
    description: "Enable username/password authentication"
    required: true
    
  local_require_email_verification:
    type: boolean
    value: false
    description: "Require email verification for new local accounts"
    required: true
    
  local_password_min_length:
    type: integer
    value: 8
    min: 4
    max: 128
    description: "Minimum password length for local accounts"
    required: true
    
  local_password_require_uppercase:
    type: boolean
    value: false
    description: "Require uppercase letters in passwords"
    required: true
    
  local_password_require_lowercase:
    type: boolean
    value: false
    description: "Require lowercase letters in passwords"
    required: true
    
  local_password_require_numbers:
    type: boolean
    value: false
    description: "Require numbers in passwords"
    required: true
    
  local_password_require_symbols:
    type: boolean
    value: false
    description: "Require special symbols in passwords"
    required: true
    
  local_bcrypt_rounds:
    type: integer
    value: 10
    min: 8
    max: 15
    description: "Bcrypt hashing rounds (higher = more secure but slower)"
    required: true
    
  local_session_timeout:
    type: integer
    value: 24
    min: 1
    max: 168
    description: "Session timeout in hours"
    required: true
    
  local_allow_new_organizations:
    type: boolean
    value: true
    description: "Allow users to create new organizations during registration"
    required: true
  
  # LDAP Configuration
  ldap_enabled:
    type: boolean
    value: false
    description: "Enable LDAP authentication"
    required: true
    
  ldap_url:
    type: string
    value: "ldap://localhost:389"
    description: "LDAP server URL (ldap:// for plain, ldaps:// for SSL)"
    required: false
    depends_on: ldap_enabled
    show_when: [true]
    
  ldap_bind_dn:
    type: string
    value: "cn=admin,dc=example,dc=com"
    description: "LDAP bind DN for authentication"
    required: false
    depends_on: ldap_enabled
    show_when: [true]
    
  ldap_bind_credentials:
    type: password
    value: "admin_password"
    description: "LDAP bind password"
    required: false
    depends_on: ldap_enabled
    show_when: [true]
    
  ldap_search_base:
    type: string
    value: "ou=users,dc=example,dc=com"
    description: "LDAP search base DN"
    required: false
    depends_on: ldap_enabled
    show_when: [true]
    
  ldap_search_filter:
    type: string
    value: "(uid={{username}})"
    description: "LDAP search filter ({{username}} will be replaced)"
    required: false
    depends_on: ldap_enabled
    show_when: [true]
    
  ldap_search_attributes:
    type: string
    value: "displayName,mail,memberOf"
    description: "Comma-separated list of LDAP attributes to retrieve"
    required: false
    depends_on: ldap_enabled
    show_when: [true]
    
  ldap_tls_reject_unauthorized:
    type: boolean
    value: false
    description: "Reject unauthorized TLS certificates for LDAPS"
    required: false
    depends_on: ldap_enabled
    show_when: [true]
  
  # External Provider Settings
  external_domain_mapping_enabled:
    type: boolean
    value: false
    description: "Enable automatic organization assignment based on email domain"
    required: true
    
  external_provisioning_enabled:
    type: boolean
    value: false
    description: "Enable automatic user provisioning for external authentication"
    required: true
    
  external_provisioning_policy:
    type: select
    value: "invite_only"
    options: ["invite_only", "auto_provision", "manual_approval", "disabled"]
    description: "Policy for handling new external users"
    required: false
    depends_on: external_provisioning_enabled
    show_when: [true]
    
  external_provisioning_default_role:
    type: select
    value: "user"
    options: ["user", "admin", "super-admin"]
    description: "Default role for auto-provisioned users"
    required: false
    depends_on: external_provisioning_enabled
    show_when: [true]
    
  external_provisioning_fallback_action:
    type: select
    value: "require_invite"
    options: ["require_invite", "create_org", "deny_access"]
    description: "Action when no organization mapping found"
    required: false
    depends_on: external_provisioning_enabled
    show_when: [true]
    
  external_profile_sync_enabled:
    type: boolean
    value: true
    description: "Sync user profile from external providers"
    required: true
    
  external_profile_update_on_login:
    type: boolean
    value: true
    description: "Update profile information on each login"
    required: false
    depends_on: external_profile_sync_enabled
    show_when: [true]
    
  external_profile_sync_fields:
    type: string
    value: "displayName,email,groups"
    description: "Comma-separated list of profile fields to sync"
    required: false
    depends_on: external_profile_sync_enabled
    show_when: [true]

# Database configuration with UI metadata
database:
  dialect:
    type: select
    value: sqlite
    options: ["sqlite", "mysql", "postgresql", "mariadb"]
    description: "Database type - SQLite for simple deployments, MySQL/PostgreSQL/MariaDB for production"
    required: true
  
  # Connection pooling settings (non-SQLite databases)
  pool:
    max:
      type: integer
      value: 5
      description: "Maximum number of connections in pool"
      required: false
      depends_on: dialect
      show_when: ["mysql", "postgresql", "mariadb"]
    min:
      type: integer
      value: 0
      description: "Minimum number of connections in pool"
      required: false
      depends_on: dialect
      show_when: ["mysql", "postgresql", "mariadb"]
    acquire:
      type: integer
      value: 30000
      description: "Maximum time (ms) to get connection before throwing error"
      required: false
      depends_on: dialect
      show_when: ["mysql", "postgresql", "mariadb"]
    idle:
      type: integer
      value: 10000
      description: "Maximum time (ms) a connection can be idle before being released"
      required: false
      depends_on: dialect
      show_when: ["mysql", "postgresql", "mariadb"]
  
  # SQLite specific settings
  storage:
    type: string
    value: "/var/lib/zoneweaver/database/zoneweaver.db"
    description: "SQLite database file path"
    required: false
    depends_on: dialect
    show_when: sqlite
  
  # Network database settings (MySQL, PostgreSQL, MariaDB)
  host:
    type: host
    value: localhost
    description: "Database host"
    required: false
    depends_on: dialect
    show_when: ["mysql", "postgresql", "mariadb"]
  
  port:
    type: integer
    value: 3306
    description: "Database port (3306 for MySQL/MariaDB, 5432 for PostgreSQL)"
    required: false
    depends_on: dialect
    show_when: ["mysql", "postgresql", "mariadb"]
  
  user:
    type: string
    value: zoneweaver
    description: "Database user"
    required: false
    depends_on: dialect
    show_when: ["mysql", "postgresql", "mariadb"]
  
  password:
    type: password
    value: ""
    description: "Database password"
    required: false
    depends_on: dialect
    show_when: ["mysql", "postgresql", "mariadb"]
  
  database_name:
    type: string
    value: zoneweaver
    description: "Database name"
    required: false
    depends_on: dialect
    show_when: ["mysql", "postgresql", "mariadb"]
  
  # General database settings
  logging:
    type: boolean
    value: false
    description: "Log SQL queries to console (for debugging)"
    required: true


# Legacy database path (kept for migration compatibility)
# Remove this after migration is complete
# database:
#   path: /var/lib/zoneweaver/database/zoneweaver.db

gravatar:
  api_key:
    type: string
    value: ""
    description: "Gravatar API key for enhanced profile images (get from https://gravatar.com/)"
    required: false

# Rate Limiting Configuration (CodeQL Security Fix)
rateLimiting:
  authentication:
    windowMs:
      type: integer
      value: 900000
      description: "Authentication rate limit window in milliseconds (15 minutes)"
      required: true
    max:
      type: integer
      value: 25
      description: "Maximum authentication attempts per window (5X higher limit)"
      required: true
    message:
      type: string
      value: "Too many authentication attempts, please try again later"
      description: "Error message for authentication rate limit"
      required: true
  
  admin:
    windowMs:
      type: integer
      value: 900000
      description: "Admin operations rate limit window in milliseconds (15 minutes)"
      required: true
    max:
      type: integer
      value: 500
      description: "Maximum admin requests per window (5X higher limit)"
      required: true
    message:
      type: string
      value: "Too many admin requests, please try again later"
      description: "Error message for admin rate limit"
      required: true
      
  apiProxy:
    windowMs:
      type: integer
      value: 60000
      description: "API proxy rate limit window in milliseconds (1 minute)"
      required: true
    max:
      type: integer
      value: 100
      description: "Maximum API proxy requests per window (5X higher limit)"
      required: true
    message:
      type: string
      value: "Too many API proxy requests, please try again later"
      description: "Error message for API proxy rate limit"
      required: true
      
  realtime:
    windowMs:
      type: integer
      value: 60000
      description: "Real-time operations rate limit window in milliseconds (1 minute)"
      required: true
    max:
      type: integer
      value: 250
      description: "Maximum real-time requests per window (5X higher limit)"
      required: true
    message:
      type: string
      value: "Too many real-time requests, please try again later"
      description: "Error message for real-time rate limit"
      required: true
      
  standard:
    windowMs:
      type: integer
      value: 900000
      description: "Standard operations rate limit window in milliseconds (15 minutes)"
      required: true
    max:
      type: integer
      value: 1000
      description: "Maximum standard requests per window (5X higher limit)"
      required: true
    message:
      type: string
      value: "Too many requests, please try again later"
      description: "Error message for standard rate limit"
      required: true
      
  staticFiles:
    windowMs:
      type: integer
      value: 900000
      description: "Static file serving rate limit window in milliseconds (15 minutes)"
      required: true
    max:
      type: integer
      value: 5000
      description: "Maximum static file requests per window (5X higher limit for normal browsing)"
      required: true
    message:
      type: string
      value: "Too many static file requests, please try again later"
      description: "Error message for static file rate limit"
      required: true
